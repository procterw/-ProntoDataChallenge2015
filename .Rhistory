display(node1)
(dim(img@.Data)[[1]]-25)
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
}
}
dim(img)
img <- img[1500:2000, 750:1250]
# 25x25 snapshots of nodes
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2000, 750:1250]
# 25x25 snapshots of nodes
node1 <- img[8:33, 10:35]
node2 <- img[10:35, 374:399]
node3 <- img[507:532, 459:484]
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
}
}
source('~/.active-rstudio-document')
i = 1
j = 1
sample <- img[i:(i+25), j:(j+25)]
dif <- node1 - sample
dif <- norm(abs(nodes[[n]] - sample))
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes) {
dif <- norm(abs(nodes[[n]] - sample))
difs <- c(difs,dif)
})
}
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(difs)
hist(difs)
hist(difs, breaks=50)
hist(difs, breaks=100)
display(img)
display(t(img))
display(t(t(img)))
rotate(nodes[[1]], 90)
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
# 25x25 snapshots of nodes
nodes <- list(
img@.Data[8:33, 10:35],
img@.Data[10:35, 374:399],
img@.Data[507:532, 459:484])
difs <- c()
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes)) {
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
if (min(difs) < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,36,36)
}
}
}
}
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
# 25x25 snapshots of nodes
nodes <- list(
img@.Data[8:33, 10:35],
img@.Data[10:35, 374:399],
img@.Data[507:532, 459:484])
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes)) {
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
if (min(difs) < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
}
}
}
display(img)
img <- img[1500:1700, 750:1150]
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:1700, 750:1150]
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes)) {
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
if (min(difs) < 5) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
}
}
}
display(img)
i = 1
j = 1
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes)) {
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
if (min(difs) < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
}
n = 1
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
difs
plot sample
plot(sample)
hist(sample)
nodes[[1]] - sample
abs(nodes[[1]] - sample)
dif <- norm(abs(nodes[[1]] - sample))
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
dif <- norm(abs(nodes[[1]] - sample))
if(dif < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
#
#     for (n in 1:length(nodes)) {
#
#       difs <- c(norm(abs(nodes[[n]] - sample)),
#                 norm(abs(rotate(nodes[[n]], 90) - sample)),
#                 norm(abs(rotate(nodes[[n]], 180) - sample)),
#                 norm(abs(rotate(nodes[[n]], 270) - sample)))
#
#       if (min(difs) < 4) {
#         img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
#       }
#
#     }
}
}
display(img)
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
# 25x25 snapshots of nodes
nodes <- list(
img@.Data[8:33, 10:35],
img@.Data[10:35, 374:399],
img@.Data[507:532, 459:484])
for (i in seq(1:(dim(img@.Data)[[1]]-25), 2)) {
for (j in seq(1:(dim(img@.Data)[[2]]-25), 2)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
dif <- norm(abs(nodes[[1]] - sample))
if(dif < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
#
#     for (n in 1:length(nodes)) {
#
#       difs <- c(norm(abs(nodes[[n]] - sample)),
#                 norm(abs(rotate(nodes[[n]], 90) - sample)),
#                 norm(abs(rotate(nodes[[n]], 180) - sample)),
#                 norm(abs(rotate(nodes[[n]], 270) - sample)))
#
#       if (min(difs) < 4) {
#         img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
#       }
#
#     }
}
}
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
# 25x25 snapshots of nodes
nodes <- list(
img@.Data[8:33, 10:35],
img@.Data[10:35, 374:399],
img@.Data[507:532, 459:484])
for (i in seq(1, (dim(img@.Data)[[1]]-25), 2)) {
for (j in seq(1, (dim(img@.Data)[[2]]-25), 2)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
dif <- norm(abs(nodes[[1]] - sample))
if(dif < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
#
#     for (n in 1:length(nodes)) {
#
#       difs <- c(norm(abs(nodes[[n]] - sample)),
#                 norm(abs(rotate(nodes[[n]], 90) - sample)),
#                 norm(abs(rotate(nodes[[n]], 180) - sample)),
#                 norm(abs(rotate(nodes[[n]], 270) - sample)))
#
#       if (min(difs) < 4) {
#         img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
#       }
#
#     }
}
}
display(img)
dim(img)
dimg(img@.data)
difs <- matrix(1, dim(img))
difs <- matrix(1, dim(img), dim(img))
601*601
img[1,1]
source('~/.active-rstudio-document')
difs
source('~/.active-rstudio-document')
plot(difs)
plot(0,0, xlim=range(1,601), ylim=range(1,601))
points(matrix)
plot(matrix)
hist(matrix)
hist(difs)
hist(difs, breaks = 100)
difs <- matrix(NA, dim(img), dim(img))
for (i in seq(1, (dim(img)[[1]]-25), 5)) {
for (j in seq(1, (dim(img)[[2]]-25), 5)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
difs[i,j] <- norm(abs(nodes[[1]] - sample))
#
#     for (n in 1:length(nodes)) {
#
#       difs <- c(norm(abs(nodes[[n]] - sample)),
#                 norm(abs(rotate(nodes[[n]], 90) - sample)),
#                 norm(abs(rotate(nodes[[n]], 180) - sample)),
#                 norm(abs(rotate(nodes[[n]], 270) - sample)))
#
#       if (min(difs) < 4) {
#         img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
#       }
#
#     }
}
}
plot(difs)
plot(difs, na.rm=TRUE)
hist(difs)
hist(difs, breaks=50)
hist(difs, breaks=100)
hist(difs, breaks=150)
difs < 4
mask <- difs < 5
m[!is.finite(m)] <- FALSE
mask[!is.finite(m)] <- FALSE
mask[!is.finite(mask)] <- FALSE
mask
difs[!is.finite(difs)] <- FALSE
plot(difs)
hist(difs)
matrixLoop <- function(mat, sub, callback) {
x <- dim(mat)[[1]] - sub
y <- dim(mat)[[2]] - sub
for (i in 1:x) {
for (j in 1:y) {
callback(mat, i, j)
}
}
}
difs <- matrix(9, dim(img), dim(img))
matrixLoop(img@.Data, 25, function(mat, i, j) {
sample <- mat[i:(i+25), j:(j+25)]
difs[i,j] <- norm(abs(nodes[[1]] - sample))
})
hist(difs)
plot(difs)
img <- readImage("~/Desktop/test.tif")
display(im)
display(img)
img <- readImage("~/Desktop/test.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
cpy <- img
nodes
display(nodes[[1]])
version
library(BlueSkyUtils)
library(maptools)
install.packages("maptools")
library(maptools)
sunrise.set(47.61, -122.33 "2014-08-12")
sunrise.set(47.61, -122.33, "2014-08-12")
?sunriset
sunriset(47.61, -122.33, "2014-08-12")
sunriset(cbind(47.61, -122.33), "2014-08-12")
sunriset(SpatialPoints(cbind(47.61, -122.33)), "2014-08-12")
(SpatialPoints(cbind(47.61, -122.33))
)
sunriset(SpatialPoints(cbind(47.61, -122.33)), as.POSIXCT("2014-08-12"))
sunriset(SpatialPoints(cbind(47.61, -122.33)), as.POSIXct("2014-08-12"))
sunriset(SpatialPoints(cbind(-122.33,47.61)), as.POSIXct("2014-08-12"))
hels <- matrix(c(24.97, 60.17), nrow=1)
d041224 <- as.POSIXct("2004-12-24", tz="EET")
Hels <- SpatialPoints(hels, proj4string=CRS("+proj=longlat +datum=WGS84"))
sunriset(hels, d041224, direction="sunrise", POSIXct.out=TRUE
)
seattle = SpatialPoints(matrix(c(47.61, -122.33),nrow=1))
seattle
seattle = SpatialPoints(matrix(c(47.61, -122.33),nrow=1), proj4string=CRS("+proj=longlat +datum=WGS84"))
seattle
seattle <- SpatialPoints(matrix(c(47.61, -122.33),nrow=1), proj4string=CRS("+proj=longlat +datum=WGS84"))
as.POSIXct("2004-12-24", tz="EET")
seq("2014-10-12", "2014-10-12", by="day")
seq(ymd("2014-10-12"), ymd("2014-10-12"), by="day")
library(lubridate)
seq(ymd("2014-10-12"), ymd("2014-10-12"), by="day")
?SpatialPoints
seattle <- sp::SpatialPoints(matrix(c(47.61, -122.33),nrow=1), proj4string=CRS("+proj=longlat +datum=WGS84"))
seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2014-10-12"), by="day")
seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day")
for (day in seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day")) {
day
}
for (day in seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day")) {
print(day)
}
sunriset(seattle, day, direction="sunrise", POSIXct.out=TRUE)
for (day in seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day")) {
sunriset(seattle, day, direction="sunrise", POSIXct.out=TRUE)
}
seattle <- sp::SpatialPoints(matrix(c(47.61, -122.33),nrow=1), proj4string=CRS("+proj=longlat +datum=WGS84"))
seattle
seattle <- sp::SpatialPoints(matrix(c(-122.33, 47.61),nrow=1), proj4string=CRS("+proj=longlat +datum=WGS84"))
seattle
plot(seattle)
day
sunriset(seattle, day, direction="sunrise", POSIXct.out=TRUE)
as.POSIXct("2004-12-24", tz="EET")
test <- as.POSIXct("2004-12-24", tz="EET")
sunriset(seattle, test, direction="sunrise", POSIXct.out=TRUE)
sunriset(seattle, test, direction="sunset", POSIXct.out=TRUE)
seattle <- sp::SpatialPoints(matrix(c(-122.33, 47.61),nrow=1))
test <- as.POSIXct("2004-12-24", tz="EET")
sunriset(seattle, test, direction="sunset", POSIXct.out=TRUE)
seattle <- sp::SpatialPoints(matrix(c(-122.33, 47.61),nrow=1), proj4string=CRS("+proj=longlat +datum=EPSG:26910"))
test <- as.POSIXct("2004-12-24", tz="EET")
sunriset(seattle, test, direction="sunset", POSIXct.out=TRUE)
test <- as.POSIXct("2004-12-24", tz="PST")
sunriset(seattle, test, direction="sunset", POSIXct.out=TRUE)
test <- as.POSIXct("2004-12-24", tz="GMT")
sunriset(seattle, test, direction="sunset", POSIXct.out=TRUE)
sunriset(seattle, test, direction="sunrise", POSIXct.out=TRUE)
seattle <- sp::SpatialPoints(matrix(c(-122.33, 47.61),nrow=1), proj4string=CRS("+proj=longlat +datum=26910"))
test <- as.POSIXct("2004-12-24", tz="GMT")
sunriset(seattle, test, direction="sunrise", POSIXct.out=TRUE)
test <- as.POSIXct("2004-12-24", tz="PT")
sunriset(seattle, test, direction="sunrise", POSIXct.out=TRUE)
seattle <- sp::SpatialPoints(matrix(c( 47.61,-122.33),nrow=1), proj4string=CRS("+proj=longlat +datum=26910"))
test <- as.POSIXct("2004-12-24", tz="PT")
sunriset(seattle, test, direction="sunrise", POSIXct.out=TRUE)
seattle <- sp::SpatialPoints(matrix(c(-122.33, 47.61),nrow=1), proj4string=CRS("+proj=longlat +datum=26910"))
test <- as.POSIXct("2004-12-24", tz="PT")
test <- as.POSIXct("2014-10-12", tz="PT")
sunriset(seattle, test, direction="sunrise", POSIXct.out=TRUE)
?sunriset
sunriset(seattle, test, POSIXct.out=TRUE)
sunriset(seattle, test)
test <- as.POSIXct("2014-10-12", tz="GMT")
sunriset(seattle, test)
sunriset(seattle, direction=c("sunrise","sunset"), test)
sunriset(seattle, direction=c("sunrise","sunset"), test, POSIXct.out=TRUE)
test = sunriset(seattle,
dateTime=seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day"),
POSIXct.out=TRUE)
test
seattle <- sp::SpatialPoints(matrix(c(-122.33, 47.61),nrow=1), proj4string=CRS("+proj=longlat +datum=26910"))
test = sunriset(seattle,
dateTime=seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day"),
POSIXct.out=TRUE)
test
?ymd
test = sunriset(seattle,
dateTime=seq(lubridate::ymd("2014-10-12", tz="PST"), lubridate::ymd("2015-10-11", tz="PST"), by="day"),
POSIXct.out=TRUE)
test
test = sunriset(seattle,
dateTime=seq(lubridate::ymd("2014-10-12", tz="PST"), lubridate::ymd("2015-10-11"), by="day"),
POSIXct.out=TRUE)
test
test = sunriset(seattle,
dateTime=seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day"),
POSIXct.out=TRUE)
sunrises <- sunriset(seattle, direction="sunrise",  proj4string=CRS("+proj=longlat +datum=26910"),
dateTime=seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day"),
POSIXct.out=TRUE)
sunrises <- sunriset(seattle, direction="sunrise",
dateTime=seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day"),
POSIXct.out=TRUE)
sunrises
sunrises <- sunriset(seattle, direction="sunset",
dateTime=seq(lubridate::ymd("2014-10-12"), lubridate::ymd("2015-10-11"), by="day"),
POSIXct.out=TRUE)
sunrises
seattle <- sp::SpatialPoints(matrix(c(-122.33, 47.61),nrow=1), proj4string=CRS("+proj=longlat +datum=26910"))
sunrises <- sunriset(seattle, direction="sunset",
dateTime=seq(lubridate::ymd("2014-10-12", tz="US/Pacific"), lubridate::ymd("2015-10-11"), tz="US/Pacific", by="day"),
POSIXct.out=TRUE)
sunrises
sunrises <- sunriset(seattle,
dateTime=seq(lubridate::ymd("2014-10-12", tz="US/Pacific"), lubridate::ymd("2015-10-11"), tz="US/Pacific", by="day"),
POSIXct.out=TRUE)
sunrises
sunrises <- sunriset(seattle, direction="sunrise",
dateTime=seq(lubridate::ymd("2014-10-12", tz="US/Pacific"), lubridate::ymd("2015-10-11"), tz="US/Pacific", by="day"),
POSIXct.out=TRUE)
sunsets <- sunriset(seattle, direction="sunset",
dateTime=seq(lubridate::ymd("2014-10-12", tz="US/Pacific"), lubridate::ymd("2015-10-11"), tz="US/Pacific", by="day"),
POSIXct.out=TRUE)
head(sunrises)
plot(sunrises$time)
sunrises$time
ymd(runsises$time)
ymd(sunrises$time)
strftime(sunrises, format="%H:%M:%S")
strftime(sunrises$time, format="%H:%M:%S")
as.data.frame(dates=strftime(sunrises$time, format="%Y:%M:%D"))
data.frame(dates=strftime(sunrises$time, format="%Y:%M:%D"))
fin <- data.frame(dates=strftime(sunrises$time, format="%Y:%m:%d"),
sunrise=strftime(sunrises$time, format="%H:%M:%S"),
sunset=strftime(sunrises$time, format="%H:%M:%S"))
View(fin)
fin <- data.frame(dates=strftime(sunrises$time, format="%Y-%m-%d"),
sunrise=strftime(sunrises$time, format="%H:%M:%S"),
sunset=strftime(sunrises$time, format="%H:%M:%S"))
View(fin)
fin <- data.frame(dates=strftime(sunrises$time, format="%Y-%m-%d"),
sunrise=strftime(sunrises$time, format="%H:%M:%S"),
sunset=strftime(sunsets$time, format="%H:%M:%S"))
View(fin)
?sunriset
write.csv(sunpos, "open_data_year_one/cleaned/sunriset.csv")
sunpos <- data.frame(date=strftime(sunrises$time, format="%Y-%m-%d"),
sunrise=strftime(sunrises$time, format="%H:%M:%S"),
sunset=strftime(sunsets$time, format="%H:%M:%S"))
write.csv(sunpos, "open_data_year_one/cleaned/sunriset.csv")
library(lubridate)
setwd("~/projects/BikeShare/")
write.csv(sunpos, "open_data_year_one/cleaned/sunriset.csv")
stations <- read.csv("open_data_year_one/2015_station_data.csv")
# statuses <- read.csv("open_data_year_one/2015_status_data.csv")
trips <- read.csv("open_data_year_one/2015_trip_data.csv")
weather <- read.csv("open_data_year_one/2015_weather_data.csv")
convertToUnixTime <- function(time, format="%m-%d-%Y %H:%M:%S") {
since1970 <- as.POSIXct("1970-1-1 00:00:00")
time <- as.POSIXct(paste0(gsub("/", "-",time), ":00"), format=format)
time <- as.numeric(difftime(time, since1970, units="mins"))
}
# For this project we don't need any of this data
unwantedColnames <- c("trip_id", "to_station_name","from_station_name","bikeid","birthyear")
trips <- trips[!(names(trips) %in% unwantedColnames)]
# These names can be shortened
trips$usertype <- gsub("Annual Member", "an", trips$usertype)
trips$usertype <- gsub("Short-Term Pass Holder", "st", trips$usertype)
trips$gender <- gsub("Male", "M", trips$gender)
trips$gender <- gsub("Female", "F", trips$gender)
trips$gender <- gsub("Other", "O", trips$gender)
since1970 <- as.POSIXct("1970-1-1 00:00:00")
trips$starttime <- unlist(lapply(trips$startime, convertToUnixTime))
trips$stoptime <- unlist(lapply(trips$stoptime, convertToUnixTime))
trips$tripduration <- trips$tripduration / 60
trips = read.csv("open_data_year_one/cleaned/trips.csv")
View(trips)
trips[1,] <- NULL
trips[,1] <- NULL
?write.csv
write.csv(trips, "open_data_year_one/cleaned/trips.csv", rownames=FALSE)
write.csv(trips, "open_data_year_one/cleaned/trips.csv", row.names=FALSE)
write.csv(weather, "open_data_year_one/cleaned/weather.csv", row.names=FALSE)
write.csv(sunpos, "open_data_year_one/cleaned/sunriset.csv", row.names=FALSE)
sunrisesunset <- data.frame(date=strftime(sunrises$time, format="%Y-%m-%d"),
sunrise=strftime(sunrises$time, format="%H:%M:%S"),
sunset=strftime(sunsets$time, format="%H:%M:%S"))
?strftime
