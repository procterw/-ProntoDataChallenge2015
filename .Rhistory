display(img)
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
img <- img * 18
img <- img[1500:2500, 750:1750]
display(img)
node1 <- img[10:40, 10:40]
display(node1)
node1 <- img[8:38, 10:40]
display(node1)
node1 <- img[8:36, 10:34]
display(node1)
node1 <- img[8:36, 10:36]
display(node1)
node1 <- img[8:34, 10:36]
display(node1)
node1 <- img[7:33, 10:36]
display(node1)
node1 <- img[8:33, 10:35]
display(node1)
display(img)
node1 <- img[12:37, 376:35]
display(node1)
node1 <- img[12:37, 376:401]
display(node1)
node1 <- img[10:35, 374:399]
display(node1)
node1 <- img[510:535, 478:503]
display(node1)
node1 <- img[510:535, 459:484]
display(node1)
node1 <- img[508:533, 459:484]
display(node1)
node1 <- img[507:532, 459:484]
display(node1)
(dim(img@.Data)[[1]]-25)
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
}
}
dim(img)
img <- img[1500:2000, 750:1250]
# 25x25 snapshots of nodes
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2000, 750:1250]
# 25x25 snapshots of nodes
node1 <- img[8:33, 10:35]
node2 <- img[10:35, 374:399]
node3 <- img[507:532, 459:484]
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
}
}
source('~/.active-rstudio-document')
i = 1
j = 1
sample <- img[i:(i+25), j:(j+25)]
dif <- node1 - sample
dif <- norm(abs(nodes[[n]] - sample))
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes) {
dif <- norm(abs(nodes[[n]] - sample))
difs <- c(difs,dif)
})
}
}
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
plot(difs)
hist(difs)
hist(difs, breaks=50)
hist(difs, breaks=100)
display(img)
display(t(img))
display(t(t(img)))
rotate(nodes[[1]], 90)
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
# 25x25 snapshots of nodes
nodes <- list(
img@.Data[8:33, 10:35],
img@.Data[10:35, 374:399],
img@.Data[507:532, 459:484])
difs <- c()
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes)) {
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
if (min(difs) < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,36,36)
}
}
}
}
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
# 25x25 snapshots of nodes
nodes <- list(
img@.Data[8:33, 10:35],
img@.Data[10:35, 374:399],
img@.Data[507:532, 459:484])
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes)) {
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
if (min(difs) < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
}
}
}
display(img)
img <- img[1500:1700, 750:1150]
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:1700, 750:1150]
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes)) {
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
if (min(difs) < 5) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
}
}
}
display(img)
i = 1
j = 1
sample <- img@.Data[i:(i+25), j:(j+25)]
for (n in 1:length(nodes)) {
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
if (min(difs) < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
}
n = 1
difs <- c(norm(abs(nodes[[n]] - sample)),
norm(abs(rotate(nodes[[n]], 90) - sample)),
norm(abs(rotate(nodes[[n]], 180) - sample)),
norm(abs(rotate(nodes[[n]], 270) - sample)))
difs
plot sample
plot(sample)
hist(sample)
nodes[[1]] - sample
abs(nodes[[1]] - sample)
dif <- norm(abs(nodes[[1]] - sample))
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
for (i in 1:(dim(img@.Data)[[1]]-25)) {
for (j in 1:(dim(img@.Data)[[2]]-25)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
dif <- norm(abs(nodes[[1]] - sample))
if(dif < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
#
#     for (n in 1:length(nodes)) {
#
#       difs <- c(norm(abs(nodes[[n]] - sample)),
#                 norm(abs(rotate(nodes[[n]], 90) - sample)),
#                 norm(abs(rotate(nodes[[n]], 180) - sample)),
#                 norm(abs(rotate(nodes[[n]], 270) - sample)))
#
#       if (min(difs) < 4) {
#         img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
#       }
#
#     }
}
}
display(img)
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
# 25x25 snapshots of nodes
nodes <- list(
img@.Data[8:33, 10:35],
img@.Data[10:35, 374:399],
img@.Data[507:532, 459:484])
for (i in seq(1:(dim(img@.Data)[[1]]-25), 2)) {
for (j in seq(1:(dim(img@.Data)[[2]]-25), 2)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
dif <- norm(abs(nodes[[1]] - sample))
if(dif < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
#
#     for (n in 1:length(nodes)) {
#
#       difs <- c(norm(abs(nodes[[n]] - sample)),
#                 norm(abs(rotate(nodes[[n]], 90) - sample)),
#                 norm(abs(rotate(nodes[[n]], 180) - sample)),
#                 norm(abs(rotate(nodes[[n]], 270) - sample)))
#
#       if (min(difs) < 4) {
#         img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
#       }
#
#     }
}
}
img <- readImage("~/Desktop/tbdata/Phase 1/0224151150_xy05c1.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
# 25x25 snapshots of nodes
nodes <- list(
img@.Data[8:33, 10:35],
img@.Data[10:35, 374:399],
img@.Data[507:532, 459:484])
for (i in seq(1, (dim(img@.Data)[[1]]-25), 2)) {
for (j in seq(1, (dim(img@.Data)[[2]]-25), 2)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
dif <- norm(abs(nodes[[1]] - sample))
if(dif < 4) {
img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
}
#
#     for (n in 1:length(nodes)) {
#
#       difs <- c(norm(abs(nodes[[n]] - sample)),
#                 norm(abs(rotate(nodes[[n]], 90) - sample)),
#                 norm(abs(rotate(nodes[[n]], 180) - sample)),
#                 norm(abs(rotate(nodes[[n]], 270) - sample)))
#
#       if (min(difs) < 4) {
#         img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
#       }
#
#     }
}
}
display(img)
dim(img)
dimg(img@.data)
difs <- matrix(1, dim(img))
difs <- matrix(1, dim(img), dim(img))
601*601
img[1,1]
source('~/.active-rstudio-document')
difs
source('~/.active-rstudio-document')
plot(difs)
plot(0,0, xlim=range(1,601), ylim=range(1,601))
points(matrix)
plot(matrix)
hist(matrix)
hist(difs)
hist(difs, breaks = 100)
difs <- matrix(NA, dim(img), dim(img))
for (i in seq(1, (dim(img)[[1]]-25), 5)) {
for (j in seq(1, (dim(img)[[2]]-25), 5)) {
sample <- img@.Data[i:(i+25), j:(j+25)]
difs[i,j] <- norm(abs(nodes[[1]] - sample))
#
#     for (n in 1:length(nodes)) {
#
#       difs <- c(norm(abs(nodes[[n]] - sample)),
#                 norm(abs(rotate(nodes[[n]], 90) - sample)),
#                 norm(abs(rotate(nodes[[n]], 180) - sample)),
#                 norm(abs(rotate(nodes[[n]], 270) - sample)))
#
#       if (min(difs) < 4) {
#         img@.Data[i:(i+25), j:(j+25)] <- matrix(1,26,26)
#       }
#
#     }
}
}
plot(difs)
plot(difs, na.rm=TRUE)
hist(difs)
hist(difs, breaks=50)
hist(difs, breaks=100)
hist(difs, breaks=150)
difs < 4
mask <- difs < 5
m[!is.finite(m)] <- FALSE
mask[!is.finite(m)] <- FALSE
mask[!is.finite(mask)] <- FALSE
mask
difs[!is.finite(difs)] <- FALSE
plot(difs)
hist(difs)
matrixLoop <- function(mat, sub, callback) {
x <- dim(mat)[[1]] - sub
y <- dim(mat)[[2]] - sub
for (i in 1:x) {
for (j in 1:y) {
callback(mat, i, j)
}
}
}
difs <- matrix(9, dim(img), dim(img))
matrixLoop(img@.Data, 25, function(mat, i, j) {
sample <- mat[i:(i+25), j:(j+25)]
difs[i,j] <- norm(abs(nodes[[1]] - sample))
})
hist(difs)
plot(difs)
img <- readImage("~/Desktop/test.tif")
display(im)
display(img)
img <- readImage("~/Desktop/test.tif")
# Crank up the light
img <- img * 18
# crop an area with lots of bacteria
img <- img[1500:2100, 750:1350]
cpy <- img
nodes
display(nodes[[1]])
version
library(BlueSkyUtils)
stations <- read.csv("open_data_year_one/2015_station_data.csv")
getwd()
setwd("~/projects/BikeShare/")
stations <- read.csv("open_data_year_one/2015_station_data.csv")
head(stations)
statuses <- read.csv("open_data_year_one/2015_status_data.csv")
trips <- read.csv("open_data_year_one/2015_trip_data.csv")
trips <- read.csv("open_data_year_one/2015_trip_data.csv")
head(trips)
trips["to_station_name"] <- null
trips["to_station_name"] <- NULL
head(trips)
trips[c("to_station_name","from_station_name","bikeid")] <- NULL
trips[,c("to_station_name","from_station_name","bikeid")] <- NULL
trips <- read.csv("open_data_year_one/2015_trip_data.csv")
test = trips[-c("to_station_name","from_station_name","bikeid")]
test = trips[!c("to_station_name","from_station_name","bikeid")]
test = trips[c("to_station_name","from_station_name","bikeid")]
head(test)
test = trips[!(names(trips) %in% c("to_station_name","from_station_name","bikeid"))]
names(test)
head(test)
unwantedColnames <- c("to_station_name","from_station_name","bikeid","tripduration","birthyear")
trips <- trips[!(names(trips) %in% unwantedColnames)]
head(trips)
unwantedColnames <- c("tripid", "to_station_name","from_station_name","bikeid","tripduration","birthyear")
trips <- trips[!(names(trips) %in% unwantedColnames)]
head(trips)
unwantedColnames <- c("trip_id", "to_station_name","from_station_name","bikeid","tripduration","birthyear")
trips <- trips[!(names(trips) %in% unwantedColnames)]
head(trips)
trips$usertype
names(trips)
trips$usertype <- gsub("Annual Member", "an", trips$usertype)
trips$usertype <- gsub("Short-Term Pass Holder", "st", trips$usertype)
head(trips)
head(stations)
stations$online
head(statuses)
head(status, 20)
head(statuses, 20)
head(statuses, 100)
write.csv(trips, "open_data_year_one/cleaned/trips.csv")
trips$gender <- gsub("Male", "M", trips$gender)
trips$gender <- gsub("Female", "F", trips$gender)
trips$gender <- gsub("Other", "O", trips$gender)
write.csv(trips, "open_data_year_one/cleaned/trips.csv")
library(lubridate)
test <- as.POSIXct(trips$starttime)
trips$starttime[[1]]
test <- as.POSIXct(as.character(trips$starttime))
test <- as.POSIXct(gsub("/", "-", trips$starttime))
test <- gsub("/", "-", trips$starttime)
test[[1]]
as.POSIXct(test[[1]])
test <- paste0(gsub("/", "-", trips$starttime), ":00")
test[[1]]
test <- as.POSIXct(paste0(gsub("/", "-", trips$starttime), ":00"))
test <- paste0(gsub("/", "-", trips$starttime), ":00")
test[[1]]
?"as.POSIXct"
as.POSIXct(test[[1]])
as.POSIXct(test[[1]],format="mm-dd-yyyy hh:mm:ss")
as.POSIXct(test[[1]],format="mm-dd-yyyy h:m:s")
as.POSIXct(test[[1]],format="%m-%d-%Y %H:%M:%S")
test <- as.POSIXct(paste0(gsub("/", "-", trips$starttime), ":00"), format="%m-%d-%Y %H:%M:%S")
test[[5]]
names(trips)
test <- as.POSIXct(paste0(gsub("/", "-", trips[c("starttime", "stoptime")]), ":00"), format="%m-%d-%Y %H:%M:%S")
head( trips[c("starttime", "stoptime")])
trips$starttime <- as.POSIXct(paste0(gsub("/", "-", trips$starttime), ":00"), format="%m-%d-%Y %H:%M:%S")
trips$stoptime <- as.POSIXct(paste0(gsub("/", "-", trips$stoptime), ":00"), format="%m-%d-%Y %H:%M:%S")
head(trips)
?lubridate
diffTime(trips$starttime, trips$stoptime)
difftime(trips$starttime, trips$stoptime)
test <- trips$starttime
since1970 <- as.POSICct("1970-1-1 00:00:00")
since1970 <- as.POSIXct("1970-1-1 00:00:00")
since1970
difftime(since1970, trips$starttime)
difftime(trips$starttime, since1970, units=minutes)[1:50]
difftime(trips$starttime, since1970, units=minutes)
difftime(trips$starttime, since1970, units="minutes")[1:50]
difftime(trips$starttime, since1970, units="mins")[1:50]
trips$starttime <- difftime(trips$starttime, since1970, units="mins")[1:50]
trips$stoptime <- difftime(trips$stoptime, since1970, units="mins")[1:50]
trips$starttime <- difftime(trips$starttime, since1970, units="mins")
trips$stoptime <- difftime(trips$stoptime, since1970, units="mins")
head(time())
head(trips)
trips$starttime = as.numeric(trips$starttime)
trips$starttime[1:50]
trips$stoptime = as.numeric(trips$stoptime)
head(trips)
write.csv(trips, "open_data_year_one/cleaned/trips.csv")
head(weather)
weather <- read.csv("open_data_year_one/2015_weather_data.csv")
head(weather)
convertToUnixTime <- function(time) {
since1970 <- as.POSIXct("1970-1-1 00:00:00")
time <- as.POSIXct(paste0(gsub("/", "-",time), ":00"), format="%m-%d-%Y %H:%M:%S")
time <- as.numeric(difftime(time, since1970, units="mins"))
}
trips <- read.csv("open_data_year_one/2015_trip_data.csv")
convertToUnixTime <- function(time) {
since1970 <- as.POSIXct("1970-1-1 00:00:00")
time <- as.POSIXct(paste0(gsub("/", "-",time), ":00"), format="%m-%d-%Y %H:%M:%S")
time <- as.numeric(difftime(time, since1970, units="mins"))
}
# For this project we don't need any of this data
unwantedColnames <- c("trip_id", "to_station_name","from_station_name","bikeid","tripduration","birthyear")
trips <- trips[!(names(trips) %in% unwantedColnames)]
# These names can be shortened
trips$usertype <- gsub("Annual Member", "an", trips$usertype)
trips$usertype <- gsub("Short-Term Pass Holder", "st", trips$usertype)
trips$gender <- gsub("Male", "M", trips$gender)
trips$gender <- gsub("Female", "F", trips$gender)
trips$gender <- gsub("Other", "O", trips$gender)
since1970 <- as.POSIXct("1970-1-1 00:00:00")
trips$starttime <- unlist(lapply(trips$startime, convertToUnixTime))
trips$stoptime <- unlist(lapply(trips$stoptime, convertToUnixTime))
head(trips)
head(ewather)
head(weather)
wantedColnames <- c("Date", "Mean_Temperature_F","Max_Wind_Speed_MPH","Mean_Wind_Speed_MPH","Events","Precipitation_In")
weather <- weather[(names(weather) %in% wantedColnames)]
head(weather)
weather$date <- unlist(lapply(weather$Date, convertToUnixTime))
head(weather)
weather$date =NULL
weather$Date <- unlist(lapply(weather$Date, convertToUnixTime, "%m-%d-%Y"))
convertToUnixTime <- function(time, format="%m-%d-%Y %H:%M:%S") {
since1970 <- as.POSIXct("1970-1-1 00:00:00")
time <- as.POSIXct(paste0(gsub("/", "-",time), ":00"), format=format)
time <- as.numeric(difftime(time, since1970, units="mins"))
}
weather$Date <- unlist(lapply(weather$Date, convertToUnixTime, "%m-%d-%Y"))
head(weather)
write.csv(weather, "open_data_year_one/cleaned/weather.csv")
write.csv(stations, "open_data_year_one/cleaned/stations.csv")
head(trips)
trips <- read.csv("open_data_year_one/2015_trip_data.csv")
weather <- read.csv("open_data_year_one/2015_weather_data.csv")
convertToUnixTime <- function(time, format="%m-%d-%Y %H:%M:%S") {
since1970 <- as.POSIXct("1970-1-1 00:00:00")
time <- as.POSIXct(paste0(gsub("/", "-",time), ":00"), format=format)
time <- as.numeric(difftime(time, since1970, units="mins"))
}
stations <- read.csv("open_data_year_one/2015_station_data.csv")
names(trips)
head(trips$tripduration)
unwantedColnames <- c("trip_id", "to_station_name","from_station_name","bikeid","birthyear")
trips <- trips[!(names(trips) %in% unwantedColnames)]
trips$usertype <- gsub("Annual Member", "an", trips$usertype)
trips$usertype <- gsub("Short-Term Pass Holder", "st", trips$usertype)
trips$gender <- gsub("Male", "M", trips$gender)
trips$gender <- gsub("Female", "F", trips$gender)
trips$gender <- gsub("Other", "O", trips$gender)
since1970 <- as.POSIXct("1970-1-1 00:00:00")
trips$starttime <- unlist(lapply(trips$startime, convertToUnixTime))
trips$stoptime <- unlist(lapply(trips$stoptime, convertToUnixTime))
trips$tripduration <- trips$tripduration / 60
